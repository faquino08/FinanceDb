CREATE STREAM IF NOT EXISTS `rawTDData` (data ARRAY<STRUCT<service VARCHAR, timestamp BIGINT,content ARRAY<VARCHAR>>>) WITH ( kafka_topic='rawTDData', value_format='json');
CREATE STREAM IF NOT EXISTS `streamTD0` AS SELECT EXPLODE(DATA)->SERVICE, EXPLODE(DATA)->TIMESTAMP, EXPLODE(DATA)->CONTENT FROM `rawTDData` EMIT CHANGES;
CREATE STREAM `tdfut1` WITH (VALUE_FORMAT='AVRO') AS SELECT SERVICE, TIMESTAMP, EXPLODE(CONTENT) AS CONTENT, CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.key') AS VARCHAR) AS `SYMBOL` FROM `streamTD0` WHERE SERVICE='LEVELONE_FUTURES' EMIT CHANGES;
CREATE STREAM IF NOT EXISTS `tdfutfin` WITH (VALUE_FORMAT='AVRO', timestamp='TIMESTAMP' ) AS SELECT SERVICE, TIMESTAMP, SYMBOL, AS_VALUE(SYMBOL) AS `TICKER`, CAST(EXTRACTJSONFIELD(CONTENT, '$.1') AS DOUBLE) AS `Bid`, CAST(EXTRACTJSONFIELD(CONTENT, '$.2') AS DOUBLE) AS `Ask`, CAST(EXTRACTJSONFIELD(CONTENT, '$.3') AS DOUBLE) AS `Last`, CAST(EXTRACTJSONFIELD(CONTENT, '$.4') AS BIGINT) AS `Bid_Size`, CAST(EXTRACTJSONFIELD(CONTENT, '$.5') AS BIGINT) AS `Ask_Size`, CAST(EXTRACTJSONFIELD(CONTENT, '$.6') AS VARCHAR) AS `ASK_ID`, CAST(EXTRACTJSONFIELD(CONTENT, '$.7') AS VARCHAR) AS `BID_ID`, CAST(EXTRACTJSONFIELD(CONTENT, '$.8') AS DOUBLE) AS `TOT_VOL`, CAST(EXTRACTJSONFIELD(CONTENT, '$.9') AS BIGINT) AS `Last_Size`, IFNULL(CAST(EXTRACTJSONFIELD(CONTENT, '$.10') AS BIGINT), CAST(-1 AS BIGINT)) AS `QUOTE_TIME`, CAST(EXTRACTJSONFIELD(CONTENT, '$.11') AS BIGINT) AS `TRADE_TIME`, CAST(EXTRACTJSONFIELD(CONTENT, '$.12') AS DOUBLE) AS `HIGH_PRICE`, CAST(EXTRACTJSONFIELD(CONTENT, '$.13') AS DOUBLE) AS `LOW_PRICE`, CAST(EXTRACTJSONFIELD(CONTENT, '$.14') AS DOUBLE) AS `CLOSE_PRICE`, CAST(EXTRACTJSONFIELD(CONTENT, '$.15') AS VARCHAR) AS `EXCHANGE_ID`, CAST(EXTRACTJSONFIELD(CONTENT, '$.16') AS VARCHAR) AS `DESCRIPTION`, CAST(EXTRACTJSONFIELD(CONTENT, '$.17') AS VARCHAR) AS `LAST_ID`, CAST(EXTRACTJSONFIELD(CONTENT, '$.18') AS DOUBLE) AS `OPEN_PRICE`, CAST(EXTRACTJSONFIELD(CONTENT, '$.19') AS DOUBLE) AS `NET_CHANGE`, CAST(EXTRACTJSONFIELD(CONTENT, '$.20') AS DOUBLE) AS `FUTURE_PERCENT_CHANGE`, IFNULL(CAST(EXTRACTJSONFIELD(CONTENT, '$.21') AS VARCHAR), CAST('?' AS VARCHAR)) AS `EXCHANGE_NAME`, CAST(EXTRACTJSONFIELD(CONTENT, '$.22') AS VARCHAR) AS `SECURITY_STATUS`, CAST(EXTRACTJSONFIELD(CONTENT, '$.23') AS INT) AS `Open_Interest`, CAST(EXTRACTJSONFIELD(CONTENT, '$.24') AS DOUBLE) AS `MARK`, CAST(EXTRACTJSONFIELD(CONTENT, '$.25') AS DOUBLE) AS `Tick`, CAST(EXTRACTJSONFIELD(CONTENT, '$.26') AS DOUBLE) AS `Tick_AMT`, CAST(EXTRACTJSONFIELD(CONTENT, '$.27') AS VARCHAR) AS `Product`, CAST(EXTRACTJSONFIELD(CONTENT, '$.28') AS VARCHAR) AS `Future_Price_Format`, CAST(EXTRACTJSONFIELD(CONTENT, '$.29') AS VARCHAR) AS `Future_Trading_Hours`, CAST(EXTRACTJSONFIELD(CONTENT, '$.30') AS BOOLEAN) AS `Future_Is_Tradable`, CAST(EXTRACTJSONFIELD(CONTENT, '$.31') AS DOUBLE) AS `Future_Multiplier`, CAST(EXTRACTJSONFIELD(CONTENT, '$.32') AS BOOLEAN) AS `Future_Is_Active`, CAST(EXTRACTJSONFIELD(CONTENT, '$.33') AS DOUBLE) AS `Future_Settlement_Price`, CAST(EXTRACTJSONFIELD(CONTENT, '$.34') AS VARCHAR) AS `Future_Active_Symbol`, CAST(EXTRACTJSONFIELD(CONTENT, '$.35') AS BIGINT) AS `Future_Expiration_Date` FROM `tdfut1` WHERE SERVICE='LEVELONE_FUTURES' PARTITION BY "SYMBOL" EMIT CHANGES;
CREATE TABLE IF NOT EXISTS `TdFuturesTable` AS SELECT LATEST_BY_OFFSET(TIMESTAMP) as "TIMESTAMP", "SYMBOL", LATEST_BY_OFFSET("Bid") as "Bid", LATEST_BY_OFFSET("Ask") as "Ask", LATEST_BY_OFFSET("Last") as "Last", LATEST_BY_OFFSET("Bid_Size") as "Bid_Size", LATEST_BY_OFFSET("Ask_Size") as "Ask_Size", LATEST_BY_OFFSET("ASK_ID") as "ASK_ID", LATEST_BY_OFFSET("BID_ID") as "BID_ID", LATEST_BY_OFFSET("TOT_VOL") as "TOT_VOL", LATEST_BY_OFFSET("Last_Size") as "Last_Size", LATEST_BY_OFFSET("QUOTE_TIME") as "QUOTE_TIME", LATEST_BY_OFFSET("TRADE_TIME") as "TRADE_TIME", LATEST_BY_OFFSET("HIGH_PRICE") as "HIGH_PRICE", LATEST_BY_OFFSET("LOW_PRICE") as "LOW_PRICE", LATEST_BY_OFFSET("CLOSE_PRICE") as "CLOSE_PRICE", LATEST_BY_OFFSET("EXCHANGE_ID") as "EXCHANGE_ID", LATEST_BY_OFFSET("DESCRIPTION") as "DESCRIPTION", LATEST_BY_OFFSET("LAST_ID") as "LAST_ID", LATEST_BY_OFFSET("OPEN_PRICE") as "OPEN_PRICE", LATEST_BY_OFFSET("NET_CHANGE") as "NET_CHANGE", LATEST_BY_OFFSET("FUTURE_PERCENT_CHANGE") as "FUTURE_PERCENT_CHANGE", LATEST_BY_OFFSET("EXCHANGE_NAME") as "EXCHANGE_NAME", LATEST_BY_OFFSET("SECURITY_STATUS") as "SECURITY_STATUS", LATEST_BY_OFFSET("Open_Interest") as "Open_Interest", LATEST_BY_OFFSET("MARK") as "MARK", LATEST_BY_OFFSET("Tick") as "Tick", LATEST_BY_OFFSET("Tick_AMT") as "Tick_AMT", LATEST_BY_OFFSET("Product") as "Product", LATEST_BY_OFFSET("Future_Price_Format") as "Future_Price_Format", LATEST_BY_OFFSET("Future_Trading_Hours") as "Future_Trading_Hours", LATEST_BY_OFFSET("Future_Is_Tradable") as "Future_Is_Tradable", LATEST_BY_OFFSET("Future_Multiplier") as "Future_Multiplier", LATEST_BY_OFFSET("Future_Is_Active") as "Future_Is_Active", LATEST_BY_OFFSET("Future_Settlement_Price") as "Future_Settlement_Price", LATEST_BY_OFFSET("Future_Active_Symbol") as "Future_Active_Symbol", LATEST_BY_OFFSET("Future_Expiration_Date") as "Future_Expiration_Date" FROM `tdfutfin` GROUP BY "SYMBOL" EMIT CHANGES;
CREATE STREAM IF NOT EXISTS `tdopt1` WITH ( VALUE_FORMAT='AVRO' ) AS SELECT SERVICE, TIMESTAMP,EXPLODE(CONTENT) AS CONTENT, CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.key') AS VARCHAR) AS "SYMBOL" FROM `streamTD0` WHERE SERVICE='OPTION' EMIT CHANGES;
CREATE STREAM IF NOT EXISTS `tdoptfin` WITH (VALUE_FORMAT='AVRO', timestamp='TIMESTAMP') AS SELECT SERVICE, TIMESTAMP, SYMBOL, AS_VALUE(SYMBOL) AS "TICKER", CAST(EXTRACTJSONFIELD(CONTENT, '$.1') AS VARCHAR) AS "DESC", CAST(EXTRACTJSONFIELD(CONTENT, '$.2') AS DOUBLE) AS "Bid", CAST(EXTRACTJSONFIELD(CONTENT, '$.3') AS DOUBLE) AS "Ask", CAST(EXTRACTJSONFIELD(CONTENT, '$.4') AS DOUBLE) AS "Last", CAST(EXTRACTJSONFIELD(CONTENT, '$.5') AS DOUBLE) AS "HIGH_PRICE", CAST(EXTRACTJSONFIELD(CONTENT, '$.6') AS DOUBLE) AS "LOW_PRICE", CAST(EXTRACTJSONFIELD(CONTENT, '$.7') AS DOUBLE) AS "CLOSE_PRICE", CAST(EXTRACTJSONFIELD(CONTENT, '$.8') AS BIGINT) AS "TOT_VOL", CAST(EXTRACTJSONFIELD(CONTENT, '$.9') AS INT) AS "OPEN_INT", CAST(EXTRACTJSONFIELD(CONTENT, '$.10') AS DOUBLE) AS "VOLATILITY", CAST(EXTRACTJSONFIELD(CONTENT, '$.11') AS BIGINT) AS "QUOTE_TIME", CAST(EXTRACTJSONFIELD(CONTENT, '$.12') AS BIGINT) AS "TRADE_TIME", CAST(EXTRACTJSONFIELD(CONTENT, '$.13') AS DOUBLE) AS "MONEY_INTRINSIC_VAL", CAST(EXTRACTJSONFIELD(CONTENT, '$.14') AS INT) AS "QUOTE_DAY", CAST(EXTRACTJSONFIELD(CONTENT, '$.15') AS INT) AS "TRADE_DAY", CAST(EXTRACTJSONFIELD(CONTENT, '$.16') AS INT) AS "EXP_YEAR", CAST(EXTRACTJSONFIELD(CONTENT, '$.19') AS DOUBLE) AS "OPEN_PRICE", CAST(EXTRACTJSONFIELD(CONTENT, '$.20') AS DOUBLE) AS "BID_SIZE", CAST(EXTRACTJSONFIELD(CONTENT, '$.21') AS DOUBLE) AS "ASK_SIZE", CAST(EXTRACTJSONFIELD(CONTENT, '$.22') AS DOUBLE) AS "LAST_SIZE", CAST(EXTRACTJSONFIELD(CONTENT, '$.23') AS DOUBLE) AS "NET_CHANGE", CAST(EXTRACTJSONFIELD(CONTENT, '$.24') AS DOUBLE) AS "STRIKE_PRICE", CAST(EXTRACTJSONFIELD(CONTENT, '$.25') AS VARCHAR) AS "CONTRACT_TYPE", CAST(EXTRACTJSONFIELD(CONTENT, '$.26') AS VARCHAR) AS "UNDERLYING", CAST(EXTRACTJSONFIELD(CONTENT, '$.27') AS INT) AS "EXP_MONTH", CAST(EXTRACTJSONFIELD(CONTENT, '$.30') AS INT) AS "EXP_DAY", CAST(EXTRACTJSONFIELD(CONTENT, '$.31') AS INT) AS "DAYS_TO_EXP", CAST(EXTRACTJSONFIELD(CONTENT, '$.32') AS DOUBLE) AS "DELTA", CAST(EXTRACTJSONFIELD(CONTENT, '$.33') AS DOUBLE) AS "GAMMA", CAST(EXTRACTJSONFIELD(CONTENT, '$.34') AS DOUBLE) AS "THETA", CAST(EXTRACTJSONFIELD(CONTENT, '$.35') AS DOUBLE) AS "VEGA", CAST(EXTRACTJSONFIELD(CONTENT, '$.36') AS DOUBLE) AS "RHO", CAST(EXTRACTJSONFIELD(CONTENT, '$.41') AS DOUBLE) AS "MARK" FROM `tdopt1` PARTITION BY "SYMBOL" EMIT CHANGES;
CREATE TABLE IF NOT EXISTS `TdOptTable` AS SELECT LATEST_BY_OFFSET(TIMESTAMP) as "TIMESTAMP", LATEST_BY_OFFSET(SYMBOL) as "SYMBOL", "TICKER", LATEST_BY_OFFSET("DESC") as "DESC", LATEST_BY_OFFSET("Bid") as "Bid", LATEST_BY_OFFSET("Ask") as "Ask", LATEST_BY_OFFSET("Last") as "Last", LATEST_BY_OFFSET("HIGH_PRICE") as "HIGH_PRICE", LATEST_BY_OFFSET("LOW_PRICE") as "LOW_PRICE", LATEST_BY_OFFSET("CLOSE_PRICE") as "CLOSE_PRICE", LATEST_BY_OFFSET("TOT_VOL") as "TOT_VOL", LATEST_BY_OFFSET("OPEN_INT") as "OPEN_INT", LATEST_BY_OFFSET("VOLATILITY") as "VOLATILITY", LATEST_BY_OFFSET("QUOTE_TIME") as "QUOTE_TIME", LATEST_BY_OFFSET("TRADE_TIME") as "TRADE_TIME", LATEST_BY_OFFSET("MONEY_INTRINSIC_VAL") as "MONEY_INTRINSIC_VAL", LATEST_BY_OFFSET("QUOTE_DAY") as "QUOTE_DAY", LATEST_BY_OFFSET("TRADE_DAY") as "TRADE_DAY", LATEST_BY_OFFSET("EXP_YEAR") as "EXP_YEAR", LATEST_BY_OFFSET("OPEN_PRICE") as "OPEN_PRICE", LATEST_BY_OFFSET("BID_SIZE") as "BID_SIZE", LATEST_BY_OFFSET("ASK_SIZE") as "ASK_SIZE", LATEST_BY_OFFSET("LAST_SIZE") as "LAST_SIZE", LATEST_BY_OFFSET("NET_CHANGE") as "NET_CHANGE", LATEST_BY_OFFSET("STRIKE_PRICE") as "STRIKE_PRICE", LATEST_BY_OFFSET("CONTRACT_TYPE") as "CONTRACT_TYPE", LATEST_BY_OFFSET("UNDERLYING") as "UNDERLYING", LATEST_BY_OFFSET("EXP_MONTH") as "EXP_MONTH", LATEST_BY_OFFSET("EXP_DAY") as "EXP_DAY", LATEST_BY_OFFSET("DAYS_TO_EXP") as "DAYS_TO_EXP", LATEST_BY_OFFSET("DELTA") as "DELTA", LATEST_BY_OFFSET("GAMMA") as "GAMMA", LATEST_BY_OFFSET("THETA") as "THETA", LATEST_BY_OFFSET("VEGA") as "VEGA", LATEST_BY_OFFSET("RHO") as "RHO", LATEST_BY_OFFSET("MARK") as "MARK" FROM `tdoptfin` GROUP BY "TICKER" EMIT CHANGES;
CREATE STREAM IF NOT EXISTS `tdquote1` WITH (VALUE_FORMAT='AVRO') AS SELECT SERVICE, TIMESTAMP, CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.key') AS VARCHAR) AS "SYMBOL", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.1') AS DOUBLE) AS "Bid", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.2') AS DOUBLE) AS "Ask", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.3') AS DOUBLE) AS "Last", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.4') AS DOUBLE) AS "Bid_Size", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.5') AS DOUBLE) AS "Ask_Size", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.6') AS VARCHAR) AS "ASK_ID", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.7') AS VARCHAR) AS "BID_ID", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.8') AS BIGINT) AS "TOT_VOL", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.9') AS DOUBLE) AS "Last_Size", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.10') AS INT) AS "TRADE_TIME", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.12') AS DOUBLE) AS "HIGH_PRICE", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.13') AS DOUBLE) AS "LOW_PRICE", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.14') AS VARCHAR) AS "BID_TICK", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.15') AS DOUBLE) AS "CLOSE_PRICE", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.16') AS VARCHAR) AS "EXCHANGE_ID", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.17') AS BOOLEAN) AS "MARGINABLE", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.18') AS BOOLEAN) AS "SHORTABLE", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.23') AS INT) AS "TRADE_DAY", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.24') AS DOUBLE) AS "VOLATILITY", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.25') AS VARCHAR) AS "DESCRIPTION", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.26') AS VARCHAR) AS "LAST_ID", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.28') AS INT) AS "OPEN_PRICE", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.29') AS DOUBLE) AS "NET_CHANGE", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.30') AS DOUBLE) AS "WK52_HIGH", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.31') AS DOUBLE) AS "WK52_LOW", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.32') AS DOUBLE) AS "PE_RATIO", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.33') AS DOUBLE) AS "DIV_AMT", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.34') AS DOUBLE) AS "DIV_YIELD", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.37') AS DOUBLE) AS "NAV", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.40') AS VARCHAR) AS "DIV_DATE", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.41') AS BOOLEAN) AS "REG_MKT_QUOTE", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.42') AS BOOLEAN) AS "REG_MKT_TRADE", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.43') AS DOUBLE) AS "REG_MKT_LAST_PRICE", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.44') AS DOUBLE) AS "REG_MKT_LAST_SIZE", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.45') AS INT) AS "REG_MKT_TRADE_TIME", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.46') AS INT) AS "REG_MKT_TRADE_DAY", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.47') AS DOUBLE) AS "REG_MKT_NET_CHANGE", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.48') AS VARCHAR) AS "SEC_STATUS", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.49') AS DOUBLE) AS "MARK", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.50') AS DOUBLE) AS "QuoteTimeinLong", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.51') AS DOUBLE) AS "TradeTimeinLong", CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.52') AS DOUBLE) AS "RegMktTradeTimeinLong" FROM `streamTD0` WHERE SERVICE='QUOTE' EMIT CHANGES;
CREATE STREAM IF NOT EXISTS `tdquotesfin` WITH ( VALUE_FORMAT='AVRO', timestamp='TIMESTAMP' ) AS SELECT *, AS_VALUE(SYMBOL) AS `TICKER` FROM `tdquote1` WHERE SERVICE='QUOTE' PARTITION BY "SYMBOL" EMIT CHANGES;
CREATE TABLE IF NOT EXISTS `TdQuotesTable` AS SELECT LATEST_BY_OFFSET(TIMESTAMP) as "TIMESTAMP", LATEST_BY_OFFSET(SYMBOL) as "SYMBOL", "TICKER", LATEST_BY_OFFSET("Bid") as "Bid", LATEST_BY_OFFSET("Ask") as "Ask", LATEST_BY_OFFSET("Last") as "Last", LATEST_BY_OFFSET("Bid_Size") as "Bid_Size", LATEST_BY_OFFSET("Ask_Size") as "Ask_Size", LATEST_BY_OFFSET("ASK_ID") as "ASK_ID", LATEST_BY_OFFSET("BID_ID") as "BID_ID", LATEST_BY_OFFSET("TOT_VOL") as "TOT_VOL", LATEST_BY_OFFSET("Last_Size") as "Last_Size", LATEST_BY_OFFSET("TRADE_TIME") as "TRADE_TIME", LATEST_BY_OFFSET("HIGH_PRICE") as "HIGH_PRICE", LATEST_BY_OFFSET("LOW_PRICE") as "LOW_PRICE", LATEST_BY_OFFSET("BID_TICK") as "BID_TICK", LATEST_BY_OFFSET("CLOSE_PRICE") as "CLOSE_PRICE", LATEST_BY_OFFSET("EXCHANGE_ID") as "EXCHANGE_ID", LATEST_BY_OFFSET("MARGINABLE") as "MARGINABLE", LATEST_BY_OFFSET("SHORTABLE") as "SHORTABLE", LATEST_BY_OFFSET("TRADE_DAY") as "TRADE_DAY", LATEST_BY_OFFSET("VOLATILITY") as "VOLATILITY", LATEST_BY_OFFSET("DESCRIPTION") as "DESCRIPTION", LATEST_BY_OFFSET("LAST_ID") as "LAST_ID", LATEST_BY_OFFSET("OPEN_PRICE") as "OPEN_PRICE", LATEST_BY_OFFSET("NET_CHANGE") as "NET_CHANGE", LATEST_BY_OFFSET("WK52_HIGH") as "WK52_HIGH", LATEST_BY_OFFSET("WK52_LOW") as "WK52_LOW", LATEST_BY_OFFSET("PE_RATIO") as "PE_RATIO", LATEST_BY_OFFSET("DIV_AMT") as "DIV_AMT", LATEST_BY_OFFSET("DIV_YIELD") as "DIV_YIELD", LATEST_BY_OFFSET("NAV") as "NAV", LATEST_BY_OFFSET("DIV_DATE") as "DIV_DATE", LATEST_BY_OFFSET("REG_MKT_QUOTE") as "REG_MKT_QUOTE", LATEST_BY_OFFSET("REG_MKT_TRADE") as "REG_MKT_TRADE", LATEST_BY_OFFSET("REG_MKT_LAST_PRICE") as "REG_MKT_LAST_PRICE", LATEST_BY_OFFSET("REG_MKT_LAST_SIZE") as "REG_MKT_LAST_SIZE", LATEST_BY_OFFSET("REG_MKT_TRADE_TIME") as "REG_MKT_TRADE_TIME", LATEST_BY_OFFSET("REG_MKT_TRADE_DAY") as "REG_MKT_TRADE_DAY", LATEST_BY_OFFSET("REG_MKT_NET_CHANGE") as "REG_MKT_NET_CHANGE", LATEST_BY_OFFSET("SEC_STATUS") as "SEC_STATUS", LATEST_BY_OFFSET("MARK") as "MARK", LATEST_BY_OFFSET("QuoteTimeinLong") as "QuoteTimeinLong", LATEST_BY_OFFSET("TradeTimeinLong") as "TradeTimeinLong", LATEST_BY_OFFSET("RegMktTradeTimeinLong") as "RegMktTradeTimeinLong" FROM `tdquotesfin` GROUP BY "TICKER" EMIT CHANGES;
CREATE STREAM IF NOT EXISTS `tdactives1` WITH ( VALUE_FORMAT='AVRO' ) AS SELECT SERVICE, TIMESTAMP, CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.key') AS VARCHAR) AS "SYMBOL", REGEXP_SPLIT_TO_ARRAY(CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.1') AS VARCHAR),';') AS "CONTENT" FROM `streamTD0` WHERE SERVICE='ACTIVES_OPTIONS' OR SERVICE='ACTIVES_NYSE' OR SERVICE='ACTIVES_NASDAQ' EMIT CHANGES;
CREATE STREAM IF NOT EXISTS `tdactives2` WITH (VALUE_FORMAT='AVRO') AS SELECT SERVICE, TIMESTAMP, SYMBOL, AS_VALUE(SYMBOL) AS "TICKER", CAST(CONTENT[1] AS BIGINT) AS "ID", CAST(CONTENT[2] AS INT) AS "sampleDuration", CONTENT[3] AS "StartTime", CONTENT[4] AS "DisplayTime", CAST(CONTENT[5] AS INT) AS "NumGroups", CAST(REGEXP_SPLIT_TO_ARRAY(CONTENT[6],':')[1] AS INT) AS "GROUPNUM1", CAST(REGEXP_SPLIT_TO_ARRAY(CONTENT[6],':')[2] AS INT) AS "GROUPSIZE1", CAST(REGEXP_SPLIT_TO_ARRAY(CONTENT[6],':')[3] AS BIGINT) AS "TOTVOL1", REGEXP_EXTRACT_ALL('([a-zA-Z]+)(\_[0-9]+[CP][0-9]+)?:([0-9]+):([0-9]+)(\.[0-9]+)?',CONTENT[6]) AS "DATA1", CAST(REGEXP_SPLIT_TO_ARRAY(CONTENT[7],':')[1] AS INT) AS "GROUPNUM2", CAST(REGEXP_SPLIT_TO_ARRAY(CONTENT[7],':')[2] AS INT) AS "GROUPSIZE2", CAST(REGEXP_SPLIT_TO_ARRAY(CONTENT[7],':')[3] AS BIGINT) AS "TOTVOL2", REGEXP_EXTRACT_ALL('([a-zA-Z]+)(\_[0-9]+[CP][0-9]+)?:([0-9]+):([0-9]+)(\.[0-9]+)?',CONTENT[7]) AS "DATA2" FROM `tdactives1` EMIT CHANGES;
CREATE STREAM IF NOT EXISTS `tdactivesbytrades` WITH ( VALUE_FORMAT='AVRO', timestamp='TIMESTAMP' ) AS SELECT SERVICE, TIMESTAMP, SYMBOL AS ACTIVETYPE, TICKER, ID, "sampleDuration", "StartTime", "DisplayTime", "NumGroups", "GROUPNUM1" AS "GROUPNUM", "GROUPSIZE1" AS "GROUPSIZE", "TOTVOL1" AS "TOTVOL", "DATA1" AS "DATA" FROM `tdactives2` EMIT CHANGES;
CREATE STREAM IF NOT EXISTS `tdactivesbyshares` WITH ( VALUE_FORMAT='AVRO', timestamp='TIMESTAMP' ) AS SELECT SERVICE, TIMESTAMP, "SYMBOL" AS "ACTIVETYPE", "TICKER", "ID", "sampleDuration", "StartTime", "DisplayTime", "NumGroups", "GROUPNUM2" AS "GROUPNUM", "GROUPSIZE2" AS "GROUPSIZE", "TOTVOL2" AS "TOTVOL", "DATA2" AS "DATA" FROM `tdactives2` EMIT CHANGES;
CREATE STREAM IF NOT EXISTS `TdActivesByTrades` WITH (kafka_topic='TdActivesByTrades') AS SELECT SERVICE, TIMESTAMP, "ACTIVETYPE", "TICKER", "ID", "sampleDuration", "StartTime", "DisplayTime", "NumGroups", "GROUPNUM", "GROUPSIZE", "TOTVOL", REGEXP_SPLIT_TO_ARRAY(EXPLODE(DATA),':')[1] AS "SYMBOL", CAST(REGEXP_SPLIT_TO_ARRAY(EXPLODE(DATA),':')[2] AS BIGINT) AS "VOLUME", CAST(REGEXP_SPLIT_TO_ARRAY(EXPLODE(DATA),':')[3] AS DOUBLE) AS "PERCENT" FROM `tdactivesbytrades` PARTITION BY "TICKER" EMIT CHANGES;
CREATE STREAM IF NOT EXISTS `TdActivesByShares` WITH (kafka_topic='TdActivesByShares') AS SELECT SERVICE, TIMESTAMP, "ACTIVETYPE", "TICKER", "ID", "sampleDuration", "StartTime", "DisplayTime", "NumGroups", "GROUPNUM", "GROUPSIZE", "TOTVOL", REGEXP_SPLIT_TO_ARRAY(EXPLODE(DATA),':')[1] AS "SYMBOL", CAST(REGEXP_SPLIT_TO_ARRAY(EXPLODE(DATA),':')[2] AS BIGINT) AS "VOLUME", CAST(REGEXP_SPLIT_TO_ARRAY(EXPLODE(DATA),':')[3] AS DOUBLE) AS "PERCENT" FROM `tdactivesbyshares` PARTITION BY "TICKER" EMIT CHANGES;
CREATE STREAM IF NOT EXISTS `rawResponses` (response ARRAY<STRUCT<service VARCHAR, timestamp BIGINT,command VARCHAR,content STRUCT<CODE INT, MSG VARCHAR>>>) WITH ( kafka_topic='rawTDData', value_format='json');
CREATE STREAM IF NOT EXISTS `responses` AS SELECT EXPLODE(RESPONSE)->SERVICE, EXPLODE(RESPONSE)->TIMESTAMP, EXPLODE(RESPONSE)->COMMAND, EXPLODE(RESPONSE)->CONTENT FROM `rawResponses` EMIT CHANGES;
CREATE STREAM IF NOT EXISTS `rawNotifications` (notify ARRAY<STRUCT<service VARCHAR, timestamp BIGINT,heartbeat BIGINT,content STRUCT<CODE INT, MSG VARCHAR>>>) WITH ( kafka_topic='rawTDData', value_format='json');
CREATE STREAM IF NOT EXISTS `notifications` AS SELECT EXPLODE(notify)->SERVICE, EXPLODE(notify)->TIMESTAMP, EXPLODE(notify)->CONTENT, EXPLODE(notify)->HEARTBEAT FROM `rawNotifications` EMIT CHANGES;
CREATE STREAM IF NOT EXISTS `rawAdmin` (admin ARRAY<STRUCT<service VARCHAR, timestamp BIGINT,heartbeat BIGINT,content STRUCT<CODE INT, MSG VARCHAR>>>) WITH ( kafka_topic='rawTDData', value_format='json');
CREATE STREAM IF NOT EXISTS `admin` AS SELECT EXPLODE(admin)->SERVICE, EXPLODE(admin)->TIMESTAMP, EXPLODE(admin)->CONTENT, EXPLODE(admin)->HEARTBEAT FROM `rawAdmin` EMIT CHANGES;
CREATE STREAM `tdchartequity1` WITH (VALUE_FORMAT='AVRO') AS SELECT SERVICE, TIMESTAMP, EXPLODE(CONTENT) AS CONTENT, CAST(EXTRACTJSONFIELD(EXPLODE(CONTENT), '$.key') AS VARCHAR) AS `SYMBOL` FROM `streamTD0` WHERE SERVICE='CHART_EQUITY' EMIT CHANGES;
CREATE STREAM IF NOT EXISTS `tdchartequityfin` WITH (VALUE_FORMAT='AVRO', timestamp='TIMESTAMP' ) AS SELECT SERVICE, TIMESTAMP, SYMBOL, AS_VALUE(SYMBOL) AS `TICKER`, CAST(EXTRACTJSONFIELD(CONTENT, '$.1') AS DOUBLE) AS "OpenPrice", CAST(EXTRACTJSONFIELD(CONTENT, '$.2') AS DOUBLE) AS "HighPrice", CAST(EXTRACTJSONFIELD(CONTENT, '$.3') AS DOUBLE) AS "LowPrice", CAST(EXTRACTJSONFIELD(CONTENT, '$.4') AS DOUBLE) AS "ClosePrice", CAST(EXTRACTJSONFIELD(CONTENT, '$.5') AS DOUBLE) AS "Volume", CAST(EXTRACTJSONFIELD(CONTENT, '$.6') AS DOUBLE) AS "Sequence", CAST(EXTRACTJSONFIELD(CONTENT, '$.7') AS DOUBLE) AS "ChartTime", CAST(EXTRACTJSONFIELD(CONTENT, '$.8') AS DOUBLE) AS "ChartDay" FROM `tdchartequity1` WHERE SERVICE='CHART_EQUITY' PARTITION BY "SYMBOL" EMIT CHANGES;
CREATE TABLE IF NOT EXISTS `tdoptions_min` AS SELECT LATEST_BY_OFFSET(TIMESTAMP) AS "TIMESTAMP", "SYMBOL" AS "SYMBOL", "TICKER", EARLIEST_BY_OFFSET("Last") AS "Open", MAX("Last") AS "High", MIN("Last") AS "Low", LATEST_BY_OFFSET("Last") AS "Close", LATEST_BY_OFFSET("TOT_VOL") - LATEST_BY_OFFSET("TOT_VOL") as "TOT_VOL" FROM `tdoptfin` WINDOW TUMBLING (SIZE 1 MINUTE) GROUP BY "TICKER","SYMBOL" EMIT CHANGES;